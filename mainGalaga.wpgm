import wollok.game.*
import player.*
import enemigos.*

program GalagaGame {
	game.title("Galga")
	const enemigo1 = (new EnemigoFuerte(position = game.at(0,40))) // PRUEBA DE MOVIMIENTO
	game.addVisual(enemigo1)
	game.height(50) // alto del tablero
	game.width(50) // ancho del tablero
	game.boardGround("3ta.gif")
	game.addVisual(nave)
	game.addVisual(new EnemigoDevil(position = game.at(10,30)))
	game.addVisual(new EnemigoMediano(position = game.at(20,30)))
	game.addVisual(new EnemigoFuerte(position = game.at(35,30)))
	game.cellSize(50) // aca se setea el tama√±a de las celdas "CREO"
	configurarTeclas.iniciar1()
	
	movimientos.cambiarMovimiento1(enemigo1) // PRUEBA DE MOVIMIENTO

	game.start()
}

object configurarTeclas{
	method iniciar() {
		keyboard.a().onPressDo({
			if (0 < nave.position().x()){
				nave.moverseA(nave.position().left(1))
			}
		})
		keyboard.d().onPressDo({
			if (game.width()-1 > nave.position().x()){
				nave.moverseA(nave.position().right(1))
			}
		})
	}

	method iniciar1(){ //2do tipo de configuracion de las teclas
		keyboard.d().onPressDo({nave.moverDerecha()})
		keyboard.a().onPressDo({nave.moverIzquierda()})
	}
}

object movimientos{ // PRUEBA DE MOVIMIENTOS
	var movimiento = false
	method moverEnemigoIzq1(unEnemigo){ // mueve a la iuzquierda
		game.onTick(500, "moveteEnemigoIzq",
        {unEnemigo.moverIzquierda()})
	}
	method moverEnemigoDer1(unEnemigo){ // mueve a la derecha
		game.onTick(500, "moverEnemigoDer",
        {unEnemigo.moverDerecha()})
	}

	
	method cambiarMovimiento(unEnemigo){ // 1ER INTENTO DE MOVIMIENTO
		self.moverEnemigoIzq1(unEnemigo)
		if (0 == unEnemigo.position().x()){
			game.removeTickEvent("moveteEnemigoIzq")
		self.moverEnemigoDer1(unEnemigo)
		}
		if (game.width()-1 == unEnemigo.position().x()){
			game.removeTickEvent("moverEnemigoDer")
		self.moverEnemigoIzq1(unEnemigo)
		}
	}
	method activarMovimiento(unEnemigo){ // PARTE DEL 1ER INTENTO DE MOVIEMIENTO
		keyboard.up().onPressDo({self.cambiarMovimiento1(unEnemigo)})
		//keyboard.a().onPressDo({self.cambiarMovimiento(unEnemigo)})
	}



	method cambiarMovimiento1(unEnemigo){ // 2DO INTENTO DE MOVIMIENTO
		if (0 == unEnemigo.position().x() and (not movimiento)){
			game.removeTickEvent("moveteEnemigoIzq")
			self.moverEnemigoDer1(unEnemigo)
		movimiento = true
		self.cambiarMovimiento2(unEnemigo)
		}
	}
	method cambiarMovimiento2(unEnemigo){ // PARTE DEL 2DO INTENTO DE MOVIMIENTO
		if (game.width()-1 == unEnemigo.position().x() and movimiento){
			game.removeTickEvent("moverEnemigoDer")
		self.moverEnemigoIzq1(unEnemigo)
		movimiento = false
		self.cambiarMovimiento1(unEnemigo)
		}
	}
}

